import os
import glob
from unittest import result
import pandas as pd
import numpy as np
import sys
# trained_path = "/Users/mac/Library/CloudStorage/OneDrive-UniversityofNewBrunswick/Thesis_implementation/trained_cic_model"

# from train_test import trained_cic_model

from trained_cic_model import trained_cic_model
# from hightlight_max import highlight_max

# print(train_test.trained_cic_model)

def test_us_data():
    filePath = '/Users/mac/Library/CloudStorage/OneDrive-UniversityofNewBrunswick/US_dataset'

    filePath='/Users/mac/Library/CloudStorage/OneDrive-UniversityofNewBrunswick/US_dataset'
    file_path = os.listdir(filePath)

    results = []
    predicted_devices = []

    if '.DS_Store' in file_path:
        # don't go into any .git directories.
        file_path.remove('.DS_Store')

    for fi in file_path:
        t = os.path.join(filePath, fi)
        # print(t)
        all_files = glob.glob(t + "/*.csv")
        li = []
        for filename in all_files:
            df = pd.read_csv(filename)
            li.append(df)

        us_device_test = pd.concat(li, axis=0, ignore_index=True)

        rf_us_device_test_predicted = trained_cic_model().predict(us_device_test)

        (unique, counts) = np.unique(rf_us_device_test_predicted,  return_counts=True,)
        frequencies_us_device_test = np.asarray((unique, counts)).T

        df = pd.DataFrame(data=frequencies_us_device_test, columns=["device_type", "count"])
        df["count"] = pd.to_numeric(df["count"])
        df['%'] = (df['count'] / df['count'].sum() * 100)

        df.sort_values('%', ascending=False,inplace=True,ignore_index=True)
        results.append([fi, df['device_type'][0]])

        predicted_devices.append(df['device_type'][0])

        
    predicted_df = pd.DataFrame(data=results, columns=["device_name", "predicted_device_type"])
    # print(predicted_df)
    # print(predicted_devices)
    return predicted_devices
